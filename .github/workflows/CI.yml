name: Continuous Integration

on:
  push:
    branches:
      - main
    paths:
      - src/*
      - .github/workflows/ci.yml
      - Cargo.toml
      - Dockerfile
  pull_request:
    branches:
      - main
    paths:
      - src/*
      - .github/workflows/ci.yml
      - Cargo.toml
      - Dockerfile

defaults:
  run:
    shell: bash

jobs:
  conventional_commits:
    name: conventional commits
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: webiny/action-conventional-commits@v1.0.5

  linter:
    name: linter
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: sudo apt update && sudo apt install -y libpcap-dev

      - name: Clippy
        run: cargo clippy --all --all-features -- -D warnings

      - name: Format
        run: cargo fmt --all -- --check

  ci:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        build: ['', --release]
        include:
          - os: macos-latest
            deps: brew install libpcap
          - os: ubuntu-latest
            deps: sudo apt update && sudo apt install -y libpcap-dev
          - build: ''
            profile: debug
          - build: --release
            profile: release
    name: ${{ matrix.os }} - ${{ matrix.profile }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: ${{ matrix.deps }}

      - name: Build project
        run: cargo build ${{ matrix.build }}

      - name: Test project
        run: cargo test

  build:
    name: Build binary
    runs-on: ubuntu-latest
    needs: linter
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build
        uses: docker/build-push-action@v3
        with:
          push: false
          cache-from: type=gha,scope=sniffer
          cache-to: type=gha,mode=max,scope=sniffer
          tag: ghcr.io/megalotron/sniffer

      - name: Scan built image
        uses: azure/container-scan@v0
        continue-on-error: true # Continue scanning even on error
        with:
          image-name: ghcr.io/megalotron/sniffer